# Задача 1. Создание класса "Книга"
# Создайте класс Book с полями:
# title (название книги, тип String),
# author (автор, тип String),
# price (цена, тип double).
# Реализуйте:
# Конструктор, который принимает все поля.
# Геттеры и сеттеры для каждого поля.
# В методе main создайте объект класса Book, измените через сеттеры автора и цену, а затем выведите в консоль информацию о книге.

# Задача 2. Класс "Человек"
# Создайте класс Person с полями:
# name (имя, тип String),
# age (возраст, тип int),
# gender (пол, тип String).
# Реализуйте:
# Конструктор с параметрами name и age.
# Конструктор по умолчанию (без параметров).
# Геттеры и сеттеры.
# Добавьте метод printInfo(), который выводит информацию о человеке в формате:
# php
# Copy code
# Имя: <name>, Возраст: <age>, Пол: <gender>


# В методе main создайте несколько объектов класса Person, вызовите метод printInfo() для каждого объекта.

# Задача 3. Класс "Машина"
# Создайте класс Car с полями:
# brand (бренд, тип String),
# model (модель, тип String),
# year (год выпуска, тип int),
# price (цена, тип double).
# Реализуйте:
# Конструктор, который принимает параметры brand, model, year.
# Методы:
# getBrand(), getModel(), getYear() и getPrice().
# setPrice(double price).
# Метод printCarInfo(), который выводит:
# php
# Copy code
# Бренд: <brand>, Модель: <model>, Год: <year>, Цена: <price>


# В методе main создайте объект класса Car, задайте цену через сеттер, а затем выведите всю информацию о машине.

# Задача 4. Класс "Товар"
# Создайте класс Product с полями:
# name (название товара, тип String),
# category (категория товара, тип String),
# quantity (количество, тип int),
# pricePerUnit (цена за единицу, тип double).
# Реализуйте:
# Конструктор с параметрами для всех полей.
# Геттеры и сеттеры.
# Метод calculateTotalPrice(), который возвращает общую стоимость товара (quantity * pricePerUnit).
# Метод printProductInfo(), который выводит:
# php
# Copy code
# Товар: <name>, Категория: <category>, Количество: <quantity>, Общая стоимость: <totalPrice>


# В методе main создайте объект, измените количество через сеттер, а затем выведите полную информацию о товаре.

# Задача 5. Класс "Студент"
# Создайте класс Student с полями:
# name (имя, тип String),
# studentId (идентификатор студента, тип int),
# gpa (средний балл, тип double).
# Реализуйте:
# Конструктор для всех полей.
# Геттеры и сеттеры.
# Метод printStudentDetails(), который выводит:
# php
# Copy code
# Студент: <name>, ID: <studentId>, GPA: <gpa>


# В методе main создайте массив из объектов Student, заполните его, и выведите данные каждого студента.

# Вот еще несколько задачек, чтобы в общей сложности получилось 15:

# Задача 7. Класс "Курс Валют"
# Создайте класс Currency с полями:
# name (название валюты, тип String),
# rateToUSD (курс валюты к доллару США, тип double).
# Реализуйте:
# Конструктор для инициализации полей.
# Геттеры и сеттеры.
# Метод convertToUSD(double amount), который возвращает сумму в долларах для заданного количества валюты.
# Метод printCurrencyInfo(), который выводит:
# php
# Copy code
# Валюта: <name>, Курс к USD: <rateToUSD>


# В методе main создайте объект валюты, выведите курс и выполните конвертацию заданной суммы в USD.

# Задача 8. Класс "Телефон"
# Создайте класс Phone с полями:
# brand (бренд телефона, тип String),
# model (модель телефона, тип String),
# price (цена телефона, тип double).
# Реализуйте:
# Конструктор для всех полей.
# Геттеры и сеттеры.
# Метод applyDiscount(double percentage), который уменьшает цену на заданный процент.
# Метод printPhoneDetails(), который выводит:
# php
# Copy code
# Телефон: <brand> <model>, Цена: <price>


# В методе main создайте телефон, примените скидку и выведите его характеристики.

# Задача 9. Класс "Сотрудник"
# Создайте класс Employee с полями:
# name (имя сотрудника, тип String),
# position (должность, тип String),
# salary (зарплата, тип double).
# Реализуйте:
# Конструктор для всех полей.
# Геттеры и сеттеры.
# Метод increaseSalary(double percentage), который увеличивает зарплату на заданный процент.
# Метод printEmployeeInfo(), который выводит:
# php
# Copy code
# Сотрудник: <name>, Должность: <position>, Зарплата: <salary>


# В методе main создайте нескольких сотрудников, увеличьте их зарплату и выведите их данные.

# Задача 10. Класс "Треугольник"
# Создайте класс Triangle с полями:
# a (сторона A, тип double),
# b (сторона B, тип double),
# c (сторона C, тип double).
# Реализуйте:
# Конструктор для всех сторон.
# Геттеры и сеттеры.
# Метод calculatePerimeter(), который возвращает периметр треугольника.
# Метод calculateArea(), который возвращает площадь треугольника по формуле Герона.
# Метод printTriangleInfo(), который выводит стороны, периметр и площадь.
# В методе main создайте объект треугольника и выведите его данные.

# Задача 11. Класс "Игрок"
# Создайте класс Player с полями:
# nickname (никнейм, тип String),
# level (уровень, тип int),
# score (очки, тип int).
# Реализуйте:
# Конструктор с параметрами для всех полей.
# Геттеры и сеттеры.
# Метод levelUp(), который увеличивает уровень на 1.
# Метод addScore(int points), который добавляет очки.
# Метод printPlayerInfo(), который выводит:
# php
# Copy code
# Игрок: <nickname>, Уровень: <level>, Очки: <score>


# В методе main создайте игрока, поднимите уровень, добавьте очки и выведите данные.

# Задача 12. Класс "Прямоугольник"
# Создайте класс Rectangle с полями:
# width (ширина, тип double),
# height (высота, тип double).
# Реализуйте:
# Конструктор с параметрами для всех полей.
# Геттеры и сеттеры.
# Методы:
# calculateArea(), возвращает площадь прямоугольника.
# calculatePerimeter(), возвращает периметр.
# Метод printRectangleInfo(), который выводит:
# php
# Copy code
# Прямоугольник: Ширина = <width>, Высота = <height>, Площадь = <area>, Периметр = <perimeter>


# В методе main создайте объект, выведите его площадь и периметр.

# Задача 13. Класс "Клиент Интернет-магазина"
# Создайте класс Customer с полями:
# name (имя клиента, тип String),
# email (почта, тип String),
# purchaseHistory (история покупок, тип List<String>).
# Реализуйте:
# Конструктор для имени и почты.
# Методы:
# addPurchase(String item), добавляет товар в историю покупок.
# printPurchaseHistory(), выводит:
# php
# Copy code
# Клиент: <name>, История покупок: <history>


# В методе main создайте клиента, добавьте несколько покупок и выведите историю.

# Задача 14. Класс "Компания"
# Создайте класс Company с полями:
# name (название компании, тип String),
# employees (количество сотрудников, тип int),
# revenue (доход, тип double).
# Реализуйте:
# Конструктор для всех полей.
# Геттеры и сеттеры.
# Метод printCompanyInfo(), который выводит:
# php
# Copy code
# Компания: <name>, Сотрудников: <employees>, Доход: <revenue>


# В методе main создайте объект компании и выведите его данные.

# Задача 15. Класс "Круг"
# Создайте класс Circle с полями:
# radius (радиус, тип double).
# Реализуйте:
# Конструктор с параметром radius.
# Методы:
# calculateCircumference(), возвращает длину окружности.
# calculateArea(), возвращает площадь круга.
# Метод printCircleInfo(), который выводит:
# php
# Copy code
# Круг: Радиус = <radius>, Площадь = <area>, Длина окружности = <circumference>


# В методе main создайте круг и выведите его данные.